AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  # Subnets
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PublicSubnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: PrivateSubnet

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: {}

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: MyECSCluster
      ServiceConnectDefaults:
        Namespace: !Ref CloudMapNamespace

  # Cloud Map Namespace
  CloudMapNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: mynamespace.local
      Vpc: !Ref MyVPC
      Description: "Private DNS namespace for ECS services"

  # ECS Task Definition
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: MyTask
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      Cpu: '256'
      Memory: '512'
      ContainerDefinitions:
        - Name: mycontainer
          Image: amazon/amazon-ecs-sample
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp

  # ECS Service with Service Connect
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 2
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: 
            - !Ref PrivateSubnet
          SecurityGroups: []
      ServiceRegistries:
        - RegistryArn: !GetAtt CloudMapService.Arn
      ServiceConnectConfiguration:
        Enabled: true
        Services:
          - PortName: "http"
            ClientAliases:
              - DnsName: "myservice.mynamespace.local"
                Port: 80

  # Cloud Map Service
  CloudMapService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: myservice
      NamespaceId: !Ref CloudMapNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60

  # API Gateway
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MyApi
      Description: API for ECS services via Service Connect

  ApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: ecs
      RestApiId: !Ref ApiGateway

  ApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiGateway
      Integration:
        IntegrationHttpMethod: POST
        Type: HTTP_PROXY
        Uri: !Sub "http://myservice.mynamespace.local"

  # VPC Link for API Gateway to ECS via Service Connect
  VpcLink:
    Type: AWS::ApiGateway::VpcLink
    Properties:
      Name: MyVpcLink
      TargetArns:
        - !Ref ECSService
